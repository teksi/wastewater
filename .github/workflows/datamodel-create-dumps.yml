name: ðŸ“¦ Datamodel | Create dumps

concurrency:
  group: dumps-${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    paths:
      - datamodel/**
      - '.github/workflows/datamodel-create-dumps.yml'
  workflow_dispatch:
  workflow_call: # Allows this workflow to be called by other workflows
      inputs:
        release_tag:
          required: true
          type: string


jobs:
  datamodel-dumps:
    name: Create dumps and schemaspy of datamodel
    runs-on: ubuntu-24.04
    env:
      COMPOSE_PROFILES: schemaspy

    steps:
      - uses: actions/checkout@v4

      - name: Docker build
        run: docker compose up -d --build

      - name: Initialize container
        run: |
          until docker compose exec db pg_isready -U postgres; do
            echo "Waiting for PostgreSQL to be ready..."
            sleep 2
          done
          docker compose exec db createdb -U postgres tww
          docker compose exec db pum -vvv -s pg_tww -d datamodel install -p SRID 2056 --roles --grant

      - name: Create dumps
        run: docker compose exec db /src/datamodel/scripts/create-dumps.py

      - name: Schemaspy
        run:  docker compose run schemaspy

      - name: Docker logs
        if: failure()
        run: docker compose logs db

      - uses: actions/upload-artifact@v4
        with:
          name: datamodel-dumps
          path: datamodel/artifacts/
          if-no-files-found: error

      - uses: actions/upload-artifact@v4
        with:
          name: datamodel-schemaspy
          path: datamodel/schemaspy/
          if-no-files-found: error

      - name: Zip datamodel dumps
        run: zip -r datamodel-dumps.zip datamodel/artifacts

      - name: Zip schemaspy output
        run: zip -r datamodel-schemaspy.zip datamodel/schemaspy

      - name: Upload datamodel dumps as GitHub Release asset
        if: ${{ inputs.release_tag != '' }}
        run: |
          gh release upload "${{ inputs.release_tag }}" datamodel-dumps.zip#oqtopus.datamodel --repo "$GITHUB_REPOSITORY"
          gh release upload "${{ inputs.release_tag }}" datamodel-schemaspy.zip --repo "$GITHUB_REPOSITORY"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG: ${{ github.ref_name }}
